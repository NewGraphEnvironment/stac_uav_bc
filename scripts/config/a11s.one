
server {
    listen 443 ssl;
    server_name images.a11s.one;

    ssl_certificate /etc/letsencrypt/live/images.a11s.one/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/images.a11s.one/privkey.pem;


    location / {
        proxy_pass http://127.0.0.1:8000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

        # add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods GET;
        add_header Access-Control-Allow-Headers Content-Type;
    }
}

server {
    listen 443 ssl;
    server_name rstudio.a11s.one;
    
    ssl_certificate /etc/letsencrypt/live/rstudio.a11s.one/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/rstudio.a11s.one/privkey.pem;

    location / {
        proxy_pass http://127.0.0.1:8787/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
    }
}

server {
    listen 443 ssl;
    server_name titiler.a11s.one;
    
    
    ssl_certificate /etc/letsencrypt/live/titiler.a11s.one/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/titiler.a11s.one/privkey.pem;


    location / {
        # if ($request_method = OPTIONS) {
        #         # add_header Access-Control-Allow-Origin "https://viewer.a11s.one" always;
        #         # add_header Access-Control-Allow-Origin * always;
        #         add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
        #         add_header Access-Control-Allow-Headers "Content-Type" always;
        #         add_header Content-Length 0;
        #         add_header Content-Type text/plain;
        #         return 204;
        # }
            
        proxy_pass http://127.0.0.1:8001/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

        # add_header Access-Control-Allow-Origin "https://viewer.a11s.one" always;
        # add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type" always;
    }
}

server {
    listen 443 ssl;
    server_name viewer.a11s.one;
    
    
    ssl_certificate /etc/letsencrypt/live/viewer.a11s.one/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/viewer.a11s.one/privkey.pem;
    
    root /var/www/html/viewer;
    index viewer.html;

    #we match the cors for titiler!
    location / {
        # add_header Access-Control-Allow-Origin "https://titiler.a11s.one" always;
        # add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type" always;
    }
}

server {
    listen 80;
    server_name a11s.one www.a11s.one;

    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    location / {
        return 301 https://a11s.one$request_uri;
    }
}

server {
    listen 80;
    server_name images.a11s.one;

    # Allow Certbot to verify the domain
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # Redirect all other traffic to HTTPS
    return 301 https://images.a11s.one$request_uri;
}

server {
    listen 80;
    server_name rstudio.a11s.one;

    # Allow Certbot to verify the domain
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # Redirect all other traffic to HTTPS
    return 301 https://rstudio.a11s.one$request_uri;
}


server {
    listen 80;
    server_name titiler.a11s.one;

    # Allow Certbot to verify the domain
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # Redirect all other traffic to HTTPS
    return 301 https://titiler.a11s.one$request_uri;
}

server {
    listen 80;
    server_name viewer.a11s.one;

    # Allow Certbot to verify the domain
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # Redirect all other traffic to HTTPS
    return 301 https://viewer.a11s.one$request_uri;
}

